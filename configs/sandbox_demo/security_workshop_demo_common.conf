# setup secure session
new-window -n turtlebot
send-keys 'ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py' Enter

split-window -h
send-keys 'ros2 run turtlebot3_teleop teleop_keyboard' Enter

split-window -v
send-keys 'ros2 topic echo /cmd_vel' Enter

# Select teleop pane
select-pane -t 1

# create navigation window
new-window -n navigation
# launch navigation using the workshop demo launch script (sandbox nodes)
send-keys 'ros2 launch configs/sandbox_demo/navigation_sandbox.launch.py' Enter

split-window -h
send-keys 'configs/initial_pose.sh'

split-window -v
send-keys 'configs/navigate_to_pose.sh'

# Select initial_pose pane
select-pane -t 1

# create mapping window
new-window -n mapping
send-keys 'ros2 launch turtlebot3_cartographer cartographer.launch.py use_sim_time:=true'

split-window -h
send-keys 'ros2 run nav2_map_server map_saver -f maps/map'

split-window -v
send-keys 'ros2 topic info /map'

# Select cartographer pane 
select-pane -t 0

# create sros window
new-window -n sros
send-keys 'tree keystore -d' Enter

split-window -h
send-keys 'ros2 security generate_artifacts -k keystore -p policies/tb3_gazebo_policy.xml -n /_ros2cli'

split-window -v
send-keys 'env | grep ROS' Enter

# reselect turtlebot window (the one with teleop)
select-window -t turtlebot
